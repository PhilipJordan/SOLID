{:ancestors{.I"FFI::AutoPointer:EF[I"Pointer;FI"FFI::AutoPointer::Releaser;F[I"Object;FI"&FFI::AutoPointer::DefaultReleaser;F[I"FFI::AutoPointer::Releaser;FI"'FFI::AutoPointer::CallableReleaser;F[@I"FFI::Enums;F[I"Object;FI"FFI::Enum;F[I"DataConverter;FI"Object;FI"FFI::NotFoundError;F[I"LoadError;FI"FFI::ManagedStruct;F[I"FFI::Struct;FI"FFI::PlatformError;F[I"LoadError;FI"FFI::Pointer;F[I"FFI::AbstractMemory;FI"FFI::StructLayout;F[I"FFI::Type;FI"FFI::StructLayout::Enum;F[I"
Field;FI"#FFI::StructLayout::InnerStruct;F[I"
Field;FI"FFI::StructLayout::Mapped;F[I"
Field;FI"FFI::Struct;F[I"Object;FI"(FFI::Struct::ManagedStructConverter;F[I"StructByReference;FI"FFI::StructLayoutBuilder;F[I"Object;FI"FFI::ConstGenerator;F[I"Object;FI""FFI::ConstGenerator::Constant;F[I"Object;FI"FFI::Generator;F[I"Object;FI"FFI::Generator::Task;F[I"Rake::TaskLib;FI"FFI::StructGenerator;F[I"Object;FI" FFI::StructGenerator::Field;F[I"Object;FI"FFI::TypesGenerator;F[I"Object;FI"FFI::StrPtrConverter;F[I"Object;FI"FFI::Union;F[@I"FFI::VariadicInvoker;F[I"Object;FI"FFI::Function;F[I"FFI::Pointer;FI"FFI::FunctionType;F[@'I"FFI::MemoryPointer;F[@YI"FFI::Struct::InlineArray;F[I"Enumerable;FI"Object;FI"FFI::StructByReference;F[@aI"FFI::StructByValue;F[I"rbffi_TypeClass:encoding"IBM437I"FFI::StructLayout::Field;F[@aI"FFI::StructLayout::Number;F[I"FFI::StructLayout::Field;FI"FFI::StructLayout::String;F[@lI"FFI::StructLayout::Pointer;F[@lI" FFI::StructLayout::Function;F[@lI"FFI::StructLayout::Array;F[@lI"FFI::Type;F[@aI"FFI::Type::Builtin;F[@':attributes{@
[I"attr_accessor autorelease;FI"FFI::Enum;F[I"attr_reader tag;F@7[I"attr_reader alignment;FI"attr_reader size;F@:[I"attr_reader constants;F@=[	I"attr_accessor value;FI"attr_reader cast;FI"attr_reader format;FI"attr_reader name;F@F[I"attr_accessor size;FI"attr_reader fields;F@I[	I"attr_accessor size;FI"attr_reader name;FI"attr_reader offset;FI"attr_reader type;F:class_methods{(@[I"from_native;FI"native_type;FI"new;F@
[I"new;FI"FFI::Enums;F[I"new;FI"FFI::Enum;F[I"new;F@[I"new;F@[I"new;F@"[I"new;FI"	size;F@%[I"new;F@.[I"new;FI"FFI::Struct;F[I"
align;FI"aligned;FI"alignment;FI"auto_ptr;FI"by_ref;FI"by_value;FI"callback;FI"enclosing_module;FI"find_field_type;FI"find_type;FI"in;FI"layout;FI"members;FI"offset_of;FI"offsets;FI"out;FI"	pack;FI"packed;FI"ptr;FI"	size;FI"
size=;FI"val;F@4[I"new;F@7[I"new;F@:[I"new;FI"options;FI"options=;F@=[I"new;F@@[I"new;F@C[I"new;F@F[I"new;FI"options;FI"options=;F@I[I"new;F@L[I"generate;F@O[I"from_native;FI"FFI::Union;F[I"builder;F@T[I"new;F@W[I"new;F@Z[I"new;F@\[I"from_string;@gI"new;F@^[I"new;F@b[I"new;F@d[I"new;F@h[I"new;FI"FFI::Type;F[I"new;FI"FFI;F[I"add_typedef;FI"
errno;FI"errno=;FI"find_type;FI"map_library_name;FI"type_size;FI"typedef;FI"FFI::IO;F[I"for_fd;FI"native_read;FI"FFI::Library;F[I"extended;FI"FFI::Platform;F[	I"	bsd?;FI"	mac?;FI"
unix?;FI"windows?;FI"FFI::LastError;F[I"
error;@gI"error=;@g;Iu:EncodingIBM437;F:instance_methods{$@[I"autorelease=;FI"autorelease?;FI"	free;F@
[I"autorelease;FI"	call;FI"	free;F@[I"release;F@[I"release;FI"FFI::Enums;F[I"<<;FI"__map_symbol;FI"	find;FI"FFI::Enum;F[I"[];FI"	find;FI"from_native;FI"native_type;FI"symbol_map;FI"symbols;FI"tag;FI"	to_h;FI"to_hash;FI"to_native;F@"[I"+;@gI"==;@gI"address;@gI"autorelease=;@gI"autorelease?;@gI"	free;@gI"initialize_copy;@gI"inspect;@gI"
null?;@gI"
order;@gI"read_array_of_type;FI"read_string;FI"read_string_length;FI"read_string_to_null;FI"
slice;@gI"	to_i;@gI"	to_s;@gI"type_size;@gI"write_array_of_type;FI"write_string;FI"write_string_length;F@%[I"[];@gI"__union!;@gI"fields;@gI"members;@gI"offset_of;FI"offsets;FI"	to_a;@g@([I"get;FI"put;F@+[I"get;FI"put;F@.[I"get;FI"put;FI"FFI::Struct;F[I"
align;FI"alignment;FI"
clear;FI"members;FI"offset_of;FI"offsets;FI"	size;FI"to_ptr;FI"values;F@4[I"from_native;F@7[I"add;FI"add_array;FI"add_field;FI"add_struct;FI"alignment;FI"alignment=;FI"
build;FI"packed=;FI"	size;FI"
size=;FI"union=;FI"union?;F@:[I"[];FI"calculate;FI"
const;FI"constants;FI"dump_constants;FI"include;FI"to_ruby;F@=[I"	cast;FI"converted_value;FI"format;FI"	name;FI"ruby_name;FI"to_ruby;FI"
value;F@@[I"constants;FI"struct;FI"	to_s;F@F[I"calculate;FI"dump_config;FI"
field;FI"fields;FI"found?;FI"generate_layout;FI"get_field;FI"include;FI"	name;FI"	size;F@I[I"	name;FI"offset;FI"offset=;FI"	size;FI"to_config;FI"	type;F@T[	I"attach;FI"	call;FI"	init;FI"invoke;@g@W[I"attach;@gI"autorelease;@gI"autorelease=;@gI"autorelease?;@gI"	call;@gI"	free;@gI"initialize_copy;@g@Z[I"param_types;@gI"result_type;@g@^[I"[];@gI"[]=;@gI"	each;@gI"	size;@gI"	to_a;@gI"to_ptr;@g@b[	I"from_native;@gI"native_type;@gI"struct_class;@gI"to_native;@g@d[I"layout;@gI"struct_class;@g@h[I"alignment;@gI"get;@gI"	name;@gI"offset;@gI"put;@gI"	size;@gI"	type;@g@q[I"get;@gI"put;@g@s[I"get;@gI"put;@gI"FFI::Type;F[I"alignment;@gI"inspect;@gI"	size;@g@w[I"inspect;@g@ø[I"attach_function;FI"attach_variable;FI"callback;FI"	enum;FI"enum_type;FI"enum_value;FI"ffi_convention;FI"ffi_lib;FI"ffi_lib_flags;FI"ffi_libraries;FI"find_type;FI"function_names;FI"typedef;F:modules[4I"FFI;FI"FFI::AutoPointer;FI"'FFI::AutoPointer::CallableReleaser;FI"&FFI::AutoPointer::DefaultReleaser;F@I"FFI::ConstGenerator;FI""FFI::ConstGenerator::Constant;FI"FFI::Enum;FI"FFI::Enums;FI"FFI::Function;FI"FFI::FunctionType;FI"FFI::Generator;FI"FFI::Generator::Task;FI"FFI::IO;FI"FFI::LastError;FI"FFI::Library;FI"FFI::ManagedStruct;FI"FFI::MemoryPointer;FI"FFI::NativeType;FI"FFI::NotFoundError;FI"FFI::Platform;FI"FFI::PlatformError;F@YI"FFI::StrPtrConverter;F@I"FFI::Struct::InlineArray;FI"(FFI::Struct::ManagedStructConverter;FI"FFI::StructByReference;FI"FFI::StructByValue;FI"FFI::StructGenerator;FI" FFI::StructGenerator::Field;FI"FFI::StructLayout;FI"FFI::StructLayout::Array;FI"FFI::StructLayout::Enum;F@lI" FFI::StructLayout::Function;FI"#FFI::StructLayout::InnerStruct;FI"FFI::StructLayout::Mapped;FI"FFI::StructLayout::Number;FI"FFI::StructLayout::Pointer;FI"FFI::StructLayout::String;FI"FFI::StructLayoutBuilder;F@'I"FFI::Type::Builtin;FI"FFI::TypesGenerator;FI"FFI::Union;FI"FFI::VariadicInvoker;F